name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build with Gradle Wrapper
        run: ./gradlew build -x test

      - name: Upload build artifact
        uses: actions/upload-artifact@v2
        with:
          name: arlabel-jar
          path: build/libs/*.jar

  deploy:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Download build artifact
        uses: actions/download-artifact@v2
        with:
            name: arlabel-jar
            path: build/libs/

      - name: Deploy application
        env:
          EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}
          EC2_USER: ${{ secrets.EC2_USER }}
          EC2_HOST: ${{ secrets.EC2_HOST }}
        run: |
          echo "$EC2_SSH_KEY" > ec2_key.pem
          chmod 400 ec2_key.pem
          scp -o StrictHostKeyChecking=no -i ec2_key.pem ./build/libs/arlabel-0.0.1-SNAPSHOT.jar $EC2_USER@$EC2_HOST:/opt/webapp
          ssh -o StrictHostKeyChecking=no -i ec2_key.pem $EC2_USER@$EC2_HOST << EOF
          sudo systemctl stop arlabel.service
          sudo systemctl start arlabel.service
          EOF
          rm -f ec2_key.pem
